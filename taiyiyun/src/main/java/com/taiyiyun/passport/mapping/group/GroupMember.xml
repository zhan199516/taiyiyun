<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.taiyiyun.passport.dao.group.IGroupMemberDao">

	<resultMap id="memeberBaseResultMap" type="com.taiyiyun.passport.po.group.GroupMember">
		<id column="groupMember_id" property="id"  jdbcType="BIGINT"/>
		<result column="groupMember_groupId" property="groupId" jdbcType="VARCHAR" />
		<result column="groupMember_userId" property="userId" jdbcType="VARCHAR" />
		<result column="groupMember_joinTime" property="joinTime" jdbcType="TIMESTAMP" />
		<result column="groupMember_joinState" property="joinState" jdbcType="INTEGER" />
		<result column="groupMember_joinType" property="joinType" jdbcType="INTEGER" />
		<result column="groupMember_inviter" property="inviter" jdbcType="INTEGER" />
		<result column="groupMember_invitedReason" property="invitedReason" jdbcType="INTEGER" />
		<result column="groupMember_nikeName" property="nikeName" jdbcType="VARCHAR" />
		<result column="groupMember_showNikeName" property="showNikeName" jdbcType="VARCHAR" />
		<result column="groupMember_msgReceiveType" property="msgReceiveType" jdbcType="INTEGER" />
		<result column="groupMember_topTalk" property="topTalk" jdbcType="INTEGER" />
		<result column="groupMember_showNikeNameDefault" property="showNikeNameDefault" jdbcType="INTEGER" />
		<result column="groupMember_msgReceiveTypeDefault" property="msgReceiveTypeDefault" jdbcType="INTEGER" />
		<result column="groupMember_topTalkDefault" property="topTalkDefault" jdbcType="INTEGER" />
		<result column="groupMember_nikeNameAltered" property="nikeNameAltered" jdbcType="INTEGER" />
		<result column="groupMember_memberCount" property="memberCount" jdbcType="INTEGER" />
		<result column="groupMember_avatarUrl" property="avatarUrl" jdbcType="INTEGER" />

	</resultMap>
	<resultMap id="memeberResultMap" type="com.taiyiyun.passport.po.group.GroupMember">
		<id column="groupMember_id" property="id"  jdbcType="BIGINT"/>
		<result column="groupMember_groupId" property="groupId" jdbcType="VARCHAR" />
		<result column="groupMember_userId" property="userId" jdbcType="VARCHAR" />
		<result column="groupMember_joinTime" property="joinTime" jdbcType="TIMESTAMP" />
		<result column="groupMember_joinState" property="joinState" jdbcType="INTEGER" />
		<result column="groupMember_joinType" property="joinType" jdbcType="INTEGER" />
		<result column="groupMember_inviter" property="inviter" jdbcType="INTEGER" />
		<result column="groupMember_invitedReason" property="invitedReason" jdbcType="INTEGER" />
		<result column="groupMember_nikeName" property="nikeName" jdbcType="VARCHAR" />
		<result column="groupMember_showNikeName" property="showNikeName" jdbcType="VARCHAR" />
		<result column="groupMember_msgReceiveType" property="msgReceiveType" jdbcType="INTEGER" />
		<result column="groupMember_topTalk" property="topTalk" jdbcType="INTEGER" />
		<result column="groupMember_showNikeNameDefault" property="showNikeNameDefault" jdbcType="INTEGER" />
		<result column="groupMember_msgReceiveTypeDefault" property="msgReceiveTypeDefault" jdbcType="INTEGER" />
		<result column="groupMember_topTalkDefault" property="topTalkDefault" jdbcType="INTEGER" />
		<result column="groupMember_nikeNameAltered" property="nikeNameAltered" jdbcType="INTEGER" />
		<result column="groupMember_memberCount" property="memberCount" jdbcType="INTEGER" />
		<association property="group" javaType="com.taiyiyun.passport.po.group.Group" >
			<id column="group_groupId" property="groupId" jdbcType="VARCHAR" />
			<result column="group_groupName" property="groupName" jdbcType="VARCHAR" />
			<result column="group_description" property="description" jdbcType="VARCHAR" />
			<result column="group_groupHeader" property="groupHeader" />
			<result column="group_ownerId" property="ownerId" jdbcType="VARCHAR" />
			<result column="group_inviteType" property="inviteType" jdbcType="INTEGER" />
			<result column="group_modifyRight" property="modifyRight" jdbcType="INTEGER" />
			<result column="group_groupType" property="groupType" jdbcType="INTEGER" />
			<result column="group_groupState" property="groupState" jdbcType="INTEGER" />
			<result column="group_createTime" property="createTime" jdbcType="TIMESTAMP" />
			<result column="group_needAuth" property="needAuth" jdbcType="INTEGER"/>
			<result column="group_isPromote" property="isPromote" jdbcType="INTEGER" />
			<result column="group_inviteTypeDefault" property="inviteTypeDefault" jdbcType="INTEGER" />
			<result column="group_modifyRightDefault" property="modifyRightDefault" jdbcType="INTEGER" />
			<result column="group_groupTypeDefault" property="groupTypeDefault" jdbcType="INTEGER" />
			<result column="group_needAuthDefault" property="needAuthDefault" jdbcType="INTEGER" />
			<result column="group_updateTime" property="updateTime" jdbcType="INTEGER" />
		</association>
		<association property="user" javaType="com.taiyiyun.passport.po.PublicUser">
			<id column="user_userId" property="id" jdbcType="VARCHAR" />
			<result column="user_userName" property="userName" jdbcType="VARCHAR" />
			<result column="user_status" property="status" jdbcType="VARCHAR" />
			<result column="user_avatarUrl" property="avatarUrl" jdbcType="VARCHAR" />
			<result column="user_createTime" property="createTime" jdbcType="TIMESTAMP" />
			<result column="user_description" property="description" jdbcType="VARCHAR" />
			<result column="user_typeId" property="typeId" jdbcType="VARCHAR" />
			<result column="user_uuid" property="uuid" jdbcType="VARCHAR" />
			<result column="user_version" property="version" jdbcType="VARCHAR" />
			<result column="user_appkey" property="appKey" jdbcType="VARCHAR" />
			<result column="user_userKey" property="userKey" jdbcType="VARCHAR" />
			<result column="user_thumbAvatarUrl" property="thumbAvatarUrl" jdbcType="VARCHAR" />
			<result column="user_backgroundImgUrl" property="backgroundImgUrl" jdbcType="VARCHAR" />
			<result column="user_barrier" property="isBarrier" jdbcType="INTEGER" />
			<result column="user_useTime" property="useTime" jdbcType="TIMESTAMP" />
			<result column="user_mobile" property="mobile" jdbcType="VARCHAR" />
			<result column="user_lastMsgPullTime" property="lastMsgPullTime" jdbcType="BIGINT"/>
			<result column="user_mobilePrefix" property="mobilePrefix" jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<!--非登陆用户群成员信息-->
	<sql id="Unlogin_Column_List">
		id, groupId, userId, joinTime, joinState, joinType, nikeName
	</sql>
	<!--登陆用户群成员信息-->
	<sql id="Login_Column_LIst">
		id, groupId, userId, joinTime, joinState, joinType, inviter, invitedReason, nikeName, showNikeName, msgReceiveType, topTalk, showNikeNameDefault, msgReceiveTypeDefault, topTalkDefault, nikeNameAltered
	</sql>

	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" keyColumn="ID" parameterType="com.taiyiyun.passport.po.group.GroupMember">
		insert into public_group_memeber
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="groupId != null">
				groupId,
			</if>
			<if test="userId != null">
				userId,
			</if>
			<if test="joinTime != null">
				joinTime,
			</if>
			<if test="joinState != null">
				joinState,
			</if>
			<if test="joinType != null">
				joinType,
			</if>
			<if test="inviter != null">
				inviter,
			</if>
			<if test="invitedReason != null">
				invitedReason,
			</if>
			<if test="nikeName != null">
				nikeName,
			</if>
			<if test="showNikeName != null">
				showNikeName,
			</if>
			<if test="msgReceiveType != null">
				msgReceiveType,
			</if>
			<if test="topTalk != null">
				topTalk,
			</if>
			<if test="showNikeNameDefault != null">
				showNikeNameDefault,
			</if>
			<if test="msgReceiveTypeDefault != null">
				msgReceiveTypeDefault,
			</if>
			<if test="topTalkDefault != null">
				topTalkDefault,
			</if>
			<if test="nikeNameAltered != null">
				nikeNameAltered,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="groupId != null">
				#{groupId,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="joinTime != null">
				#{joinTime,jdbcType=TIMESTAMP},
			</if>
			<if test="joinState != null">
				#{joinState,jdbcType=INTEGER},
			</if>
			<if test="joinType != null">
				#{joinType,jdbcType=INTEGER},
			</if>
			<if test="inviter != null">
				#{inviter,jdbcType=VARCHAR},
			</if>
			<if test="invitedReason != null">
				#{invitedReason,jdbcType=VARCHAR},
			</if>
			<if test="nikeName != null">
				#{nikeName,jdbcType=VARCHAR},
			</if>
			<if test="showNikeName != null">
				#{showNikeName,jdbcType=VARCHAR},
			</if>
			<if test="msgReceiveType != null">
				#{msgReceiveType,jdbcType=INTEGER},
			</if>
			<if test="topTalk != null">
				#{topTalk,jdbcType=INTEGER},
			</if>
			<if test="showNikeNameDefault != null">
				#{showNikeNameDefault,jdbcType=INTEGER},
			</if>
			<if test="msgReceiveTypeDefault != null">
				#{msgReceiveTypeDefault,jdbcType=INTEGER},
			</if>
			<if test="topTalkDefault != null">
				#{topTalkDefault,jdbcType=INTEGER},
			</if>
			<if test="nikeNameAltered != null">
				#{nikeNameAltered,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<select id="selectGroupMemberByGroupIdAndUserId" parameterType="java.util.Map" resultType="com.taiyiyun.passport.po.group.GroupMember">
		select * from public_group_memeber where groupId=#{groupId, jdbcType=VARCHAR} and userId=#{userId, jdbcType=VARCHAR}
	</select>

	<select id="selectGroupMemberCounts" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from public_group_memeber where groupId = #{groupId, jdbcType=VARCHAR} and joinState = 1
	</select>
	
	<select id="selectTheEarliestMem" parameterType="java.lang.String"  resultType="com.taiyiyun.passport.po.group.GroupMember">
		select * from public_group_memeber m where m.groupId = #{groupId, jdbcType=VARCHAR} and joinState = 1 order by m.joinTime asc limit 1
	</select>



	<update id="authGroupMemberByGroupIdAndUserId" parameterType="java.util.Map">
		update public_group_memeber set joinState = 1 where groupId=#{groupId, jdbcType=VARCHAR} and userId=#{userId, jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKeySelective" parameterType="com.taiyiyun.passport.po.group.GroupMember">
		update public_group_memeber
		<set>
			<if test="joinTime != null">
				joinTime = #{joinTime,jdbcType=TIMESTAMP},
			</if>
			<if test="joinState != null">
				joinState = #{joinState,jdbcType=INTEGER},
			</if>
			<if test="joinType != null">
				joinType = #{joinType,jdbcType=INTEGER},
			</if>
			<if test="inviter != null">
				inviter = #{inviter,jdbcType=VARCHAR},
			</if>
			<if test="invitedReason != null">
				invitedReason = #{invitedReason,jdbcType=VARCHAR},
			</if>
			<if test="nikeName != null">
				nikeName = #{nikeName,jdbcType=VARCHAR},
			</if>
			<if test="showNikeName != null">
				showNikeName = #{showNikeName,jdbcType=INTEGER},
			</if>
			<if test="msgReceiveType != null">
				msgReceiveType = #{msgReceiveType,jdbcType=INTEGER},
			</if>
			<if test="topTalk != null">
				topTalk = #{topTalk,jdbcType=INTEGER},
			</if>
			<if test="showNikeNameDefault != null">
				showNikeNameDefault = #{showNikeNameDefault,jdbcType=INTEGER},
			</if>
			<if test="msgReceiveTypeDefault != null">
				msgReceiveTypeDefault = #{msgReceiveTypeDefault,jdbcType=INTEGER},
			</if>
			<if test="topTalkDefault != null">
				topTalkDefault = #{topTalkDefault,jdbcType=INTEGER},
			</if>
			<if test="nikeNameAltered != null">
				nikeNameAltered = #{nikeNameAltered,jdbcType=INTEGER},
			</if>
		</set>
		where groupId = #{groupId,jdbcType=VARCHAR} and userId = #{userId, jdbcType=VARCHAR}
	</update>

	<delete id="deleteGroupMemberCanNotOwner" parameterType="java.util.Map">
		delete gm from public_group_memeber gm where gm.groupId=#{groupId, jdbcType=VARCHAR} and gm.userId=#{userId, jdbcType=VARCHAR} and not exists(select 1 from public_group g where g.groupId=#{groupId, jdbcType=VARCHAR} and g.ownerId=gm.userId)
	</delete>

	<delete id="deleteGroupMemberCanBeAll" parameterType="java.util.Map">
		delete gm from public_group_memeber gm where gm.groupId=#{groupId, jdbcType=VARCHAR} and gm.userId=#{userId, jdbcType=VARCHAR}
	</delete>

	<select id="selectGroupMemberUserIdByGroupId" parameterType="java.lang.String" resultType="java.lang.String">
		select gm.userId from public_group_memeber gm where gm.groupId=#{groupId, jdbcType=VARCHAR} and joinState = 1
	</select>

	<select id="selectGroupUserInfoOnLogin" parameterType="java.util.Map" resultType="com.taiyiyun.passport.po.group.GroupMember">
		select <include refid="Login_Column_LIst"/> from public_group_memeber gm where gm.groupId=#{groupId, jdbcType=VARCHAR} and gm.userId=#{userId, jdbcType=VARCHAR} and gm.joinState = 1
	</select>

	<select id="selectGroupIds" parameterType="java.lang.String" resultType="java.lang.String">
		select groupId from public_group_memeber where userId = #{userId, jdbcType=VARCHAR} and joinState = 1
	</select>

	<select id="selectGroupMemsByGroupId" parameterType="java.lang.String" resultType = "com.taiyiyun.passport.po.group.GroupMember">
		select gm.*,u.avatarUrl from public_group_memeber gm left join public_user u on gm.userId=u.userId where gm.groupId= #{groupId, jdbcType = VARCHAR} and gm.joinState = 1
	</select>

	<select id="listGroupMemberCount" parameterType="java.lang.String" resultType="com.taiyiyun.passport.po.group.GroupMember">
		select count(1) memberCount,pgroupMemeber.groupId
		from public_group_memeber pgroupMemeber
		inner join public_group pgroup on pgroup.groupId=pgroupMemeber.groupId
		where pgroup.ownerId = #{ownerId, jdbcType=VARCHAR}
			and pgroup.isPromote=1
			and pgroupMemeber.joinState = 1
		group by pgroupMemeber.groupId
		order by pgroup.createTime desc
	</select>

	<select id="getMemberCountByGroupIds" parameterType="com.taiyiyun.passport.po.group.GroupMember" resultMap="memeberBaseResultMap">
		select
			pgroupMemeber.groupId groupMember_groupId,
			count(1) groupMember_memberCount
		from public_group_memeber pgroupMemeber
		<where>
			<trim suffixOverrides="and">
				<if test="userId != null">
					pgroupMemeber.userId = #{userId,jdbcType=INTEGER} and
				</if>
				<if test="joinState != null">
					pgroupMemeber.joinState = #{joinState,jdbcType=INTEGER} and
				</if>
				<foreach collection="groupIds" open="(" close=")" item="item" index="index" separator="or">
					pgroupMemeber.groupId = #{item, jdbcType=VARCHAR}
				</foreach>
			</trim>
		</where>
		group  by pgroupMemeber.groupId
	</select>

	<select id="listMembersByGroupIds" parameterType="com.taiyiyun.passport.po.group.GroupMember" resultMap="memeberBaseResultMap">
		select
			pgroupMemeber.groupId groupMember_groupId,
			pgroupMemeber.userId groupMember_userId,
			pgroupMemeber.joinTime groupMember_joinTime,
			pgroupMemeber.joinState groupMember_joinState,
			pgroupMemeber.joinType groupMember_joinType,
			pgroupMemeber.nikeName groupMember_nikeName,
			pgroupMemeber.showNikeName groupMember_showNikeName,
			pgroupMemeber.nikeNameAltered groupMember_nikeNameAltered,
			pgroupMemeber.topTalk groupMember_topTalk,
			pgroupMemeber.msgReceiveType groupMember_msgReceiveType,
			puser.avatarUrl groupMember_avatarUrl
		from public_group_memeber pgroupMemeber
		inner join public_user puser on puser.userId=pgroupMemeber.userId
		<where>
			<trim suffixOverrides="and">
				pgroupMemeber.joinState = 1 and
				<if test="userId != null">
					pgroupMemeber.userId = #{userId,jdbcType=VARCHAR} and
				</if>
				<foreach collection="groupIds" open="(" close=")" item="item" index="index" separator="or">
					pgroupMemeber.groupId = #{item, jdbcType=VARCHAR}
				</foreach>
			</trim>
		</where>
		<if test="offset != null">
			limit ${offset}
		</if>
	</select>

	<select id="listMembersByUserId" parameterType="com.taiyiyun.passport.po.group.GroupMember" resultMap="memeberResultMap">
		select
			pgroupMemeber.groupId groupMember_groupId,
			_gmember.memberCount groupMember_memberCount
		from public_group_memeber pgroupMemeber
		inner join (
			select
				gmember.groupId,
				count(*) memberCount
			from public_group_memeber gmember
			where gmember.userId = #{userId,jdbcType=VARCHAR} and gmember.joinState = 1
			group by gmember.groupId
		) _gmember on pgroupMemeber.groupId=_gmember.groupId
		where pgroupMemeber.userId = #{userId,jdbcType=VARCHAR} and pgroupMemeber.joinState = 1
		order by pgroupMemeber.groupId desc
		<if test="offset != null">
			limit ${offset}
		</if>
	</select>

	<select id="listMembersByContent" parameterType="com.taiyiyun.passport.po.group.GroupMember" resultMap="memeberBaseResultMap">
		select
			pgroupMemeber.id groupMember_id,
			pgroupMemeber.groupId groupMember_groupId,
			pgroupMemeber.userId groupMember_userId,
			pgroupMemeber.joinTime groupMember_joinTime,
			pgroupMemeber.joinState groupMember_joinState,
			pgroupMemeber.joinType groupMember_joinType,
			pgroupMemeber.inviter groupMember_inviter,
			pgroupMemeber.invitedReason groupMember_invitedReason,
			pgroupMemeber.nikeName groupMember_nikeName,
			pgroupMemeber.showNikeName groupMember_showNikeName,
			pgroupMemeber.nikeNameAltered groupMember_nikeNameAltered,
			puser.avatarUrl groupMember_avatarUrl
		from public_group_memeber pgroupMemeber
		inner join public_user puser on puser.userId=pgroupMemeber.userId
		<where>
			<trim suffixOverrides="and">
				pgroupMemeber.joinState = 1 and
				<if test="id != null">
					<![CDATA[pgroupMemeber.id<#{id,jdbcType=BIGINT}]]> and
				</if>
				<if test="groupId != null">
					pgroupMemeber.groupId=#{groupId,jdbcType=VARCHAR} and
				</if>
				<trim suffixOverrides="or" prefix="(" suffix=")">
					<if test="userName != null">
						puser.userName like concat('%',#{userName,jdbcType=VARCHAR},'%') or
					</if>
					<if test="nikeName != null">
						pgroupMemeber.nikeName like concat('%',#{nikeName,jdbcType=VARCHAR},'%')
					</if>
				</trim>
			</trim>
		</where>
		order by pgroupMemeber.id desc
		<if test="offset != null">
			limit ${offset}
		</if>
	</select>

	<select id="listMembersByIds" parameterType="com.taiyiyun.passport.po.group.GroupMember" resultMap="memeberBaseResultMap">
		select
			pgroupMemeber.groupId groupMember_groupId,
			pgroupMemeber.userId groupMember_userId,
			pgroupMemeber.joinTime groupMember_joinTime,
			pgroupMemeber.joinType groupMember_joinType,
			pgroupMemeber.nikeName groupMember_nikeName,
			pgroupMemeber.nikeNameAltered groupMember_nikeNameAltered,
			puser.avatarUrl groupMember_avatarUrl,
			_gmember.memberCount groupMember_memberCount
		from public_group_memeber pgroupMemeber
		inner join public_user puser on puser.userId=pgroupMemeber.userId
		inner join (
			select
				gmember.groupId,
				count(*) memberCount
			from public_group_memeber gmember
			where gmember.groupId = #{groupId,jdbcType=VARCHAR} and gmember.joinState = 1
		) _gmember on pgroupMemeber.groupId=_gmember.groupId
		<where>
			<trim suffixOverrides="and">
				pgroupMemeber.joinState = 1 and
				<if test="groupId != null">
					pgroupMemeber.groupId=#{groupId,jdbcType=VARCHAR} and
				</if>
				<foreach collection="userIds" open="(" close=")" item="item" index="index" separator="or">
					pgroupMemeber.userId = #{item, jdbcType=VARCHAR}
				</foreach>
			</trim>
		</where>
		order by pgroupMemeber.id desc
	</select>


	<update id="updateTopById" parameterType="com.taiyiyun.passport.po.group.GroupMember">
		update public_group_memeber
		set topTalk = #{topTalk,jdbcType=INTEGER}
		where groupId = #{groupId,jdbcType=VARCHAR}
			and userId = #{userId, jdbcType=VARCHAR}
	</update>

	<update id="updateDisturbById" parameterType="com.taiyiyun.passport.po.group.GroupMember">
		update public_group_memeber
		set msgReceiveType = #{msgReceiveType,jdbcType=INTEGER}
		where groupId = #{groupId,jdbcType=VARCHAR}
			and userId = #{userId, jdbcType=VARCHAR}
	</update>

	<select id="selectSetDisturbUserIds" parameterType="java.lang.String" resultType="java.lang.String">
		select userId from public_group_memeber m where m.groupId = #{groupId, jdbcType=VARCHAR} and m.msgReceiveType = 1
	</select>
</mapper>